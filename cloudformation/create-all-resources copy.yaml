# Copyright 2012-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://aws.amazon.com/asl/
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.


AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to automate IAM setup for Partner (reseller) Master Account. 

Parameters:

  OrgAdminPassword:
    Type: String
    NoEcho: True
    MinLength: 1
    Description: Password for the Org Admin

  PartnerAdminPassword:
    Type: String
    NoEcho: True
    MinLength: 1
    Description: Password for the Partner Admin

Resources:
  # -------------------------------------------------------------------------
  # IAM groups for Administrator Profiles - set policies here
  PartnerAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: PartnerAdminGroup
      Path: "/"
  OrgAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: OrgAdminGroup
      Path: "/"

  # -------------------------------------------------------------------------
  # IAM Policy - to be applied to Customer Org Aministrators
  # allow org updates
  AllowOrgUpdatesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: AllowOrgUpdatesPolicy
      Description: Allow update actions
      PolicyDocument: { "Version": "2012-10-17",
                      "Statement": 
                          [{
                          "Effect": "Allow",
                          "Action": [
                              "organizations:InviteAccountToOrganization",
                              "organizations:DeclineHandshake",
                              "organizations:ListRoots",
                              "organizations:DeletePolicy",
                              "organizations:DescribeAccount",
                              "organizations:CreateAccount",
                              "organizations:DescribePolicy",
                              "organizations:ListChildren",
                              "organizations:EnableAWSServiceAccess",
                              "organizations:ListCreateAccountStatus",
                              "organizations:DescribeOrganization",
                              "organizations:EnablePolicyType",
                              "organizations:UpdatePolicy",
                              "organizations:DescribeOrganizationalUnit",
                              "organizations:AttachPolicy",
                              "organizations:MoveAccount",
                              "organizations:DescribeHandshake",
                              "organizations:CreatePolicy",
                              "organizations:DescribeCreateAccountStatus",
                              "organizations:ListPoliciesForTarget",
                              "organizations:ListTargetsForPolicy",
                              "organizations:DisableAWSServiceAccess",
                              "organizations:DetachPolicy",
                              "organizations:DeleteOrganizationalUnit",
                              "organizations:ListAWSServiceAccessForOrganization",
                              "organizations:AcceptHandshake",
                              "organizations:ListPolicies",
                              "organizations:ListAccountsForParent",
                              "organizations:ListHandshakesForOrganization",
                              "organizations:ListHandshakesForAccount",
                              "organizations:CancelHandshake",
                              "organizations:LeaveOrganization",
                              "organizations:ListAccounts",
                              "organizations:RemoveAccountFromOrganization",
                              "organizations:UpdateOrganizationalUnit",
                              "organizations:ListParents",
                              "organizations:ListOrganizationalUnitsForParent",
                              "organizations:CreateOrganizationalUnit"
                          ],
                          "Resource": "*"
                  }
                ]
            }

      Groups:
        - Ref: OrgAdminGroup
    DependsOn: OrgAdminGroup

  # IAM Policy - to be applied to Customer Org Aministrators
  # do not allow Org Admin to detach any SCPs
  DenyScpDetachPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyScpDetachPolicy
      Description: Deny detaching of SCPs
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Deny
          Action:
          - organizations:DetachPolicy
          Resource:
          - arn:aws:organizations::111111111111:policy/o-idxghyb7pw/service_control_policy/p-nqtkz47h
      Groups:
        - Ref: OrgAdminGroup
    DependsOn: OrgAdminGroup

  # IAM Policy - to be applied to Customer Org Aministrators
  # deny Org Admins access to any cost or billing
  DenyAllBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyAllBillingPolicy
      Description: Deny all billing actions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Deny
          Action:
          - aws-portal:*
          - ce:*      
          Resource: "*"
      Groups:
        - Ref: OrgAdminGroup
    DependsOn: OrgAdminGroup

  # -------------------------------------------------------------------------
  # IAM Global Admin Policies - to be applied to both Org and Billing Admins
  DenyIamUpdatesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyIamUpdatesPolicy
      Description: Deny IAM create and update actions
      PolicyDocument: { "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Deny",
                            "Action": [
                              "iam:UpdateAssumeRolePolicy",
                              "iam:PutRolePermissionsBoundary",
                              "iam:DeletePolicy",
                              "iam:AttachRolePolicy",
                              "iam:PutRolePolicy",
                              "iam:DeleteRolePermissionsBoundary",
                              "iam:CreateUser",
                              "iam:RemoveUserFromGroup",
                              "iam:DetachRolePolicy",
                              "iam:DeleteRolePolicy",
                              "iam:DetachGroupPolicy",
                              "iam:DetachUserPolicy",
                              "iam:CreatePolicyVersion",
                              "iam:PutGroupPolicy",
                              "iam:CreateGroup",
                              "iam:PutUserPermissionsBoundary",
                              "iam:DeleteUserPolicy",
                              "iam:AttachUserPolicy",
                              "iam:DeleteUserPermissionsBoundary",
                              "iam:CreatePolicy",
                              "iam:AttachGroupPolicy",
                              "iam:PutUserPolicy",
                              "iam:DeleteGroupPolicy",
                              "iam:DeletePolicyVersion",
                              "iam:SetDefaultPolicyVersion"
                            ],
                            "Resource": "*"
                          },
                          {
                            "Effect": "Deny",
                            "Action": "iam:DeleteAccountPasswordPolicy",
                            "Resource": "*"
                          }
                        ]
                      }
      Groups:
        - Ref: OrgAdminGroup
        - Ref: PartnerAdminGroup
    DependsOn: 
    - PartnerAdminGroup
    - OrgAdminGroup

  # -------------------------------------------------------------------------
  # IAM Billing Admin Policy - to be applied to Partner Billing Aministrator
  AllowAllBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: AllowAllBillingPolicy
      Description: Allow all billing actions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: 
          - aws-portal:*
          Resource: "*"
      Groups:
        - Ref: PartnerAdminGroup
    DependsOn: PartnerAdminGroup

  # IAM Billing Admin Policy - to be applied to Partner Billing Aministrator
  DenyOrgUpdatesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyOrgUpdatesPolicy
      Description: Deny org create and update actions
      PolicyDocument: { "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Deny",
                            "Action": [
                              "organizations:InviteAccountToOrganization",
                              "organizations:DeclineHandshake",
                              "organizations:DetachPolicy",
                              "organizations:DeletePolicy",
                              "organizations:DeleteOrganizationalUnit",
                              "organizations:DisablePolicyType",
                              "organizations:AcceptHandshake",
                              "organizations:CancelHandshake",
                              "organizations:RemoveAccountFromOrganization",
                              "organizations:UpdateOrganizationalUnit",
                              "organizations:UpdatePolicy",
                              "organizations:EnablePolicyType",
                              "organizations:AttachPolicy",
                              "organizations:CreateOrganizationalUnit",
                              "organizations:MoveAccount"
                            ],
                            "Resource": "*"
                          },
                          {
                            "Effect": "Deny",
                            "Action": [
                              "organizations:LeaveOrganization",
                              "organizations:EnableAWSServiceAccess",
                              "organizations:DisableAWSServiceAccess",
                              "organizations:EnableAllFeatures",
                              "organizations:CreateAccount",
                              "organizations:DeleteOrganization",
                              "organizations:CreateOrganization",
                              "organizations:CreatePolicy"
                            ],
                            "Resource": "*"
                          }
                        ]
                      }
      Groups:
        - Ref: PartnerAdminGroup
    DependsOn: PartnerAdminGroup

  # -------------------------------------------------------------------------
  # Create Admin User Profiles
  PartnerAdmin:
    Type: AWS::IAM::User
    Properties:
      UserName: PartnerAdmin
      Path: "/"
      LoginProfile:
        Password: !Ref PartnerAdminPassword
      Groups: 
        - !Ref PartnerAdminGroup
  OrgAdmin:
    Type: AWS::IAM::User
    Properties:
      UserName: OrgAdmin
      Path: "/"
      LoginProfile:
        Password: !Ref OrgAdminPassword
      Groups: 
        - !Ref OrgAdminGroup