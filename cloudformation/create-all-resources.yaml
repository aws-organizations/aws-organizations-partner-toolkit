AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to automate IAM setup for Partner (DLT) Master Account

Parameters:

  OrgAdminPassword:
    Type: String
    NoEcho: True
    MinLength: 1
    Description: Password for the Org Admin

  PartnerAdminPassword:
    Type: String
    NoEcho: True
    MinLength: 1
    Description: Password for the Partner Admin

Resources:

  PartnerAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: PartnerAdminGroup
      Path: "/"
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AdministratorAccess

  OrgAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: OrgAdminGroup
      Path: "/"
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/AdministratorAccess

  AllowAllBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: AllowAllBillingPolicy
      Description: Allow all billing actions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: 
          - aws-portal:*
          Resource: "*"
      Groups:
        - Ref: PartnerAdminGroup
    DependsOn: PartnerAdminGroup

  DenyOrgUpdatesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyOrgUpdatesPolicy
      Description: Deny org create and update actions
      PolicyDocument: { "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Deny",
                            "Action": [
                              "organizations:InviteAccountToOrganization",
                              "organizations:DeclineHandshake",
                              "organizations:DetachPolicy",
                              "organizations:DeletePolicy",
                              "organizations:DeleteOrganizationalUnit",
                              "organizations:DisablePolicyType",
                              "organizations:AcceptHandshake",
                              "organizations:CancelHandshake",
                              "organizations:RemoveAccountFromOrganization",
                              "organizations:UpdateOrganizationalUnit",
                              "organizations:UpdatePolicy",
                              "organizations:EnablePolicyType",
                              "organizations:AttachPolicy",
                              "organizations:CreateOrganizationalUnit",
                              "organizations:MoveAccount"
                            ],
                            "Resource": [
                              "arn:aws:organizations::*:handshake/o-*/*/h-*",
                              "arn:aws:organizations::*:policy/o-*/*/p-*",
                              "arn:aws:organizations::*:account/o-*/*",
                              "arn:aws:organizations::*:root/o-*/r-*",
                              "arn:aws:organizations::*:ou/o-*/ou-*"
                            ]
                          },
                          {
                            "Effect": "Deny",
                            "Action": [
                              "organizations:LeaveOrganization",
                              "organizations:EnableAWSServiceAccess",
                              "organizations:DisableAWSServiceAccess",
                              "organizations:EnableAllFeatures",
                              "organizations:CreateAccount",
                              "organizations:DeleteOrganization",
                              "organizations:CreateOrganization",
                              "organizations:CreatePolicy"
                            ],
                            "Resource": "*"
                          }
                        ]
                      }
      Groups:
        - Ref: PartnerAdminGroup
    DependsOn: PartnerAdminGroup

  DenyScpDetachPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyScpDetachPolicy
      Description: Deny detaching of SCPs
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Deny
          Action:
          - organizations:DetachPolicy
          Resource:
          - arn:aws:organizations::166631568452:policy/o-idxghyb7pw/service_control_policy/p-nqtkz47h
      Groups:
        - Ref: OrgAdminGroup
    DependsOn: OrgAdminGroup

  DenyAllBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyAllBillingPolicy
      Description: Deny all billing actions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Deny
          Action:
          - aws-portal:*
          - ce:*      
          Resource: "*"
      Groups:
        - Ref: OrgAdminGroup
    DependsOn: OrgAdminGroup

  DenyIamUpdatesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: DenyIamUpdatesPolicy
      Description: Deny IAM create and update actions
      PolicyDocument: { "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Deny",
                            "Action": [
                              "iam:UpdateAssumeRolePolicy",
                              "iam:PutRolePermissionsBoundary",
                              "iam:DeletePolicy",
                              "iam:AttachRolePolicy",
                              "iam:PutRolePolicy",
                              "iam:DeleteRolePermissionsBoundary",
                              "iam:CreateUser",
                              "iam:RemoveUserFromGroup",
                              "iam:DetachRolePolicy",
                              "iam:DeleteRolePolicy",
                              "iam:DetachGroupPolicy",
                              "iam:DetachUserPolicy",
                              "iam:CreatePolicyVersion",
                              "iam:PutGroupPolicy",
                              "iam:CreateGroup",
                              "iam:PutUserPermissionsBoundary",
                              "iam:DeleteUserPolicy",
                              "iam:AttachUserPolicy",
                              "iam:DeleteUserPermissionsBoundary",
                              "iam:CreatePolicy",
                              "iam:AttachGroupPolicy",
                              "iam:PutUserPolicy",
                              "iam:DeleteGroupPolicy",
                              "iam:DeletePolicyVersion",
                              "iam:SetDefaultPolicyVersion"
                            ],
                            "Resource": [
                              "arn:aws:iam::*:saml-provider/*",
                              "arn:aws:iam::*:policy/*",
                              "arn:aws:iam::*:oidc-provider/*",
                              "arn:aws:iam::*:instance-profile/*",
                              "arn:aws:iam::*:user/*",
                              "arn:aws:iam::*:role/*",
                              "arn:aws:iam::*:server-certificate/*",
                              "arn:aws:iam::*:sms-mfa/*",
                              "arn:aws:iam::*:group/*",
                              "arn:aws:iam::*:mfa/*/*"
                            ]
                          },
                          {
                            "Effect": "Deny",
                            "Action": "iam:DeleteAccountPasswordPolicy",
                            "Resource": "*"
                          }
                        ]
                      }
      Groups:
        - Ref: OrgAdminGroup
        - Ref: PartnerAdminGroup
    DependsOn: 
    - PartnerAdminGroup
    - OrgAdminGroup

  PartnerAdmin:
    Type: AWS::IAM::User
    Properties:
      UserName: PartnerAdmin
      Path: "/"
      LoginProfile:
        Password: !Ref PartnerAdminPassword
      Groups: 
        - !Ref PartnerAdminGroup

  OrgAdmin:
    Type: AWS::IAM::User
    Properties:
      UserName: OrgAdmin
      Path: "/"
      LoginProfile:
        Password: !Ref OrgAdminPassword
      Groups: 
        - !Ref OrgAdminGroup